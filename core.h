#ifndef CORE_H
#define CORE_H

#include "qpoint.h"
#include <component.h>
#include <gameobject.h>
#include <transform.h>

class Core : public Component
{
private:
    //空位是0，放映机是1，座椅是2，爆米花是3，眼镜是4，光束是6，增加速度7，增加炸弹威力8，增加炸弹个数9，是否可移动炸弹10，是否为隐藏雷区11
    int m_data[30][30] = {{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
                          {1,0,0,3,3,0,4,3,0,0,0,3,3,0,0,0,3,0,0,1},
                          {1,0,1,2,4,1,1,2,1,3,1,1,2,1,3,1,2,2,0,1},
                          {1,3,0,4,0,4,3,4,0,3,4,2,4,4,0,3,4,0,3,1},
                          {1,1,3,2,1,2,2,0,1,3,2,3,4,2,2,2,2,4,0,1},
                          {1,2,3,4,4,0,3,4,4,3,0,1,3,4,3,3,4,0,1,1},
                          {1,0,0,2,4,1,2,4,1,1,1,3,4,1,3,2,2,0,3,1},
                          {1,3,2,1,0,0,1,0,1,1,1,0,4,0,0,1,1,2,3,1},
                          {1,4,0,1,4,2,2,3,1,1,1,1,0,1,0,2,1,3,0,1},
                          {1,2,0,3,4,0,3,0,4,3,3,0,4,3,4,3,3,3,1,1},
                          {1,0,3,1,2,1,1,4,2,0,2,1,0,2,1,1,1,0,2,1},
                          {1,3,0,4,0,0,3,3,4,3,4,1,0,3,3,3,4,0,4,1},
                          {1,0,2,1,3,1,2,2,1,4,1,0,2,1,0,2,1,4,0,1},
                          {1,0,0,3,0,3,4,0,0,0,0,3,0,0,3,4,4,0,0,1},
                          {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};
    int p_data[30][30] = {{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                          {0,0,0,8,0,0,7,0,0,0,0,9,8,0,0,0,0,0,0,0},
                          {0,0,0,0,7,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0},
                          {0,7,0,0,0,0,8,0,0,9,0,0,0,0,0,0,7,0,7,0},
                          {0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0},
                          {0,0,0,0,0,0,8,0,9,0,0,0,0,8,0,0,0,0,0,0},
                          {0,0,0,0,0,0,0,10,0,0,0,0,9,0,0,0,0,0,9,0},
                          {0,8,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0},
                          {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                          {0,0,0,9,0,0,0,0,7,0,8,0,7,8,10,0,0,0,0,0},
                          {0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0},
                          {0,9,0,7,0,0,0,0,0,0,7,0,0,0,0,0,0,0,7,0},
                          {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0},
                          {0,0,0,8,0,0,7,0,0,0,0,9,0,0,0,0,9,0,0,0},
                          {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}};
    int p1x, p1y, p2x, p2y, r1x, r1y, r2x, r2y;
public:
    Core();

    int ask(int x, int y) const { return m_data[x][y]; }
    int PropAsk(int x, int y) const { return p_data[x][y]; }
    int checkX(int id);
    int checkY(int id);

    void eat(int x, int y) { p_data[x][y] = 0; }
    void change(int x, int y, int alt) { m_data[x][y] = alt; }
    void UpdateLocation(int id, int x, int y);

    bool current(int x, int y);
    bool dangerous(int x, int y);
    bool breakable(int x, int y);
    bool fireable(int x, int y);
    bool eatable(int x, int y);
    bool SafePassage(int x, int y);

    void onAttach() override;
    void onUpdate(float deltaTime) override;
};

#endif // CORE_H
